@using PortfolioUnleashed.Models.ViewModels;
@using PortfolioUnleashed.Enums;
@model VMEditingUser
@{
    ViewBag.Title = "Edit Account";
}

<link href="~/Style/UserViewsStyle.css" type="text/css" rel="stylesheet" />

@section PageHeader
{
Edit Your Account
}

<div class="container formArea" style="border: 2px solid black;">
    @Html.ValidationSummary()
    @using (Html.BeginForm("AccountEdit", "User", FormMethod.Post))
    {
        @Html.HiddenFor(m => m.Email)
        @Html.HiddenFor(m => m.UserId)
        <div>
            <fieldset class="container accountCreationSection">
                <legend>Basic Info  <span class="glyphicon glyphicon-user" /></legend>
                <div class="formSection">
                    <div class="row">
                        <div class="col-xs-6 form-group">
                            @Html.LabelFor(m => m.FirstName)
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                            @Html.ValidationMessageFor(m => m.FirstName)
                        </div>
                        <div class="col-xs-6 form-group">
                            @Html.LabelFor(m => m.LastName)
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
                            @Html.ValidationMessageFor(m => m.LastName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword)
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmNewPassword)
                        @Html.PasswordFor(m => m.ConfirmNewPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ConfirmNewPassword)
                    </div>
                </div>
            </fieldset>
            if (Model.Education != null && Model.Education.Count > 0)
            {
                @Html.Partial("~/Views/User/Partial/FormEntry/_EducationFormPartial.cshtml", Model.Education)
            }
            else
            {
                @Html.Partial("~/Views/User/Partial/FormEntry/_EducationFormPartial.cshtml", new List<VMEducation>())
            }
            if (Model.Links != null)
            {
                @Html.Partial("~/Views/User/Partial/FormEntry/_LinksFormPartial.cshtml", Model.Links)
            }
            else
            {
                @Html.Partial("~/Views/User/Partial/FormEntry/_LinksFormPartial.cshtml", new List<VMLink>())
            }
        if (Model.ContactInfos != null && Model.ContactInfos.Count > 0)
        {
            @Html.Partial("~/Views/User/Partial/FormEntry/_ContactsFormPartial.cshtml", Model.ContactInfos)
            }
        else
        {
            @Html.Partial("~/Views/User/Partial/FormEntry/_ContactsFormPartial.cshtml", new List<VMContactInfo>())
            }
		
        <div class="container form-group">
            <p>
                @Html.LabelFor(m => m.CurrentPassword, "Enter Password to confirm changes")
                @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CurrentPassword)
            </p>
        </div>

            <div class="submitButton">
                <input class="btn btn-primary" type="submit" value="Submit" />
            </div>
        </div>
    }
</div>

<script src="~/Scripts/jquery-2.1.1.min.js" type="text/javascript"></script>
<script>
    //link entry creation
    $(function () {
        $("#btnAddLink").click(function (e) {
            var itemIndex = $("#linkContainer input.iHidden").length;
            console.debug("itemIndex : " + itemIndex);
            e.preventDefault();
            $.get("@Url.Action("NewLinkEntry", "User")", function (data) {
                $("#linkContainer").append(data);
            });
        });
    });
    //contactInfo entry creation
    $(function () {
        $("#btnAddContactInfo").click(function (e) {
            var itemIndex = $("#contactInfoContainer input.iHidden").length;
            console.debug("itemIndex : " + itemIndex);
            e.preventDefault();
            $.get("@Url.Action("NewContactInfoEntry", "User")", function (data) {
                $("#contactInfoContainer").append(data);
            });
        });
    });
    //education entry creation
    $(function () {
        $("#btnAddEducation").click(function (e) {
            var itemIndex = $("#educationContainer input.iHidden").length;
            console.debug("itemIndex : " + itemIndex);
            e.preventDefault();
            $.get("@Url.Action("NewEducationEntry", "User")", function (data) {
            $("#educationContainer").append(data);
        });
    });
});

</script>
